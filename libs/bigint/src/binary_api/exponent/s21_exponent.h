#ifndef S21_EXPONENT_H_
#define S21_EXPONENT_H_

#include "../arithmetic/s21_binary_arithmetic.h"
#include "../boolean_logic/s21_binary_logic.h"
#include "../s21_structures.h"
#include "../shifts/s21_binary_shifts.h"

/* exponent handling */
int get_exponent(s21_decimal decimal);
void set_exponent(s21_decimal *decimal, int new_exponent);
void s21_normalize_decimal_pair(s21_decimal *a, s21_decimal *b, int *overflow);
s21_decimal get_power_of_ten(int pow);

static const char *const binary_powers_of_ten[29] = {
    [0] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
    [1] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010",
    [2] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100100",
    [3] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111101000",
    [4] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000010011100010000",
    [5] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000000011000011010100000",
    [6] =
        "000000000000000000000000000000000000000000000000000000000000000000000000000011110100001001000000",
    [7] =
        "000000000000000000000000000000000000000000000000000000000000000000000000100110001001011010000000",
    [8] =
        "000000000000000000000000000000000000000000000000000000000000000000000101111101011110000100000000",
    [9] =
        "000000000000000000000000000000000000000000000000000000000000000000111011100110101100101000000000",
    [10] =
        "000000000000000000000000000000000000000000000000000000000000001001010100000010111110010000000000",
    [11] =
        "000000000000000000000000000000000000000000000000000000000001011101001000011101101110100000000000",
    [12] =
        "000000000000000000000000000000000000000000000000000000001110100011010100101001010001000000000000",
    [13] =
        "000000000000000000000000000000000000000000000000000010010001100001001110011100101010000000000000",
    [14] =
        "000000000000000000000000000000000000000000000000010110101111001100010000011110100100000000000000",
    [15] =
        "000000000000000000000000000000000000000000000011100011010111111010100100110001101000000000000000",
    [16] =
        "000000000000000000000000000000000000000000100011100001101111001001101111110000010000000000000000",
    [17] =
        "000000000000000000000000000000000000000101100011010001010111100001011101100010100000000000000000",
    [18] =
        "000000000000000000000000000000000000110111100000101101101011001110100111011001000000000000000000",
    [19] =
        "000000000000000000000000000000001000101011000111001000110000010010001001111010000000000000000000",
    [20] =
        "000000000000000000000000000001010110101111000111010111100010110101100011000100000000000000000000",
    [21] =
        "000000000000000000000000001101100011010111001001101011011100010111011110101000000000000000000000",
    [22] =
        "000000000000000000000010000111100001100111100000110010011011101010110010010000000000000000000000",
    [23] =
        "000000000000000000010101001011010000001011000111111000010100101011110110100000000000000000000000",
    [24] =
        "000000000000000011010011110000100001101111001110110011001110110110100001000000000000000000000000",
    [25] =
        "000000000000100001000101100101010001011000010100000000010100100001001010000000000000000000000000",
    [26] =
        "000000000101001010110111110100101101110011001000000011001101001011100100000000000000000000000000",
    [27] =
        "000000110011101100101110001111001001111111010000100000000011110011101000000000000000000000000000",
    [28] =
        "001000000100111111001110010111100011111000100101000000100110000100010000000000000000000000000000",
};

#endif  // S21_EXPONENT_H_
